// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LowCode.Migrations
{
    [DbContext(typeof(LowCodeDbContext))]
    [Migration("20230910145148_InitialVersion")]
    partial class InitialVersion
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LowCode.Models.InternalAttribute", b =>
                {
                    b.Property<Guid?>("AttributeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AttributeMask")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<Guid?>("AttributeTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("CreatedBy")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime");

                    b.Property<string>("DefaultValue")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("EntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("IsCustomField")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPKAttribute")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("LogicalName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int?>("MaxLength")
                        .HasColumnType("int");

                    b.Property<decimal?>("MaxValue")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("MinValue")
                        .HasColumnType("decimal");

                    b.Property<int?>("ModifiedBy")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime");

                    b.HasKey("AttributeId")
                        .HasName("PK_Attribute");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("AttributeId"), false);

                    b.HasIndex("AttributeTypeId");

                    b.HasIndex("EntityId");

                    b.HasIndex(new[] { "DisplayName" }, "idx_attribute_displayname");

                    b.HasIndex(new[] { "LogicalName" }, "idx_attribute_logicalname");

                    b.ToTable("InternalAttribute", (string)null);
                });

            modelBuilder.Entity("LowCode.Models.InternalAttributeType", b =>
                {
                    b.Property<Guid?>("AttributeTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomType")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("SqlType")
                        .HasColumnType("int");

                    b.HasKey("AttributeTypeId")
                        .HasName("PK_AttributeType");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("AttributeTypeId"), false);

                    b.HasIndex(new[] { "Name" }, "idx_name");

                    b.ToTable("InternalAttributeType", (string)null);
                });

            modelBuilder.Entity("LowCode.Models.InternalEntity", b =>
                {
                    b.Property<Guid?>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("CreatedBy")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("EntityMask")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsCustomEntity")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("LogicalName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int?>("ModifiedBy")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime");

                    b.HasKey("EntityId")
                        .HasName("PK_Entity");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("EntityId"), false);

                    b.HasIndex(new[] { "DisplayName" }, "idx_entity_displayname");

                    b.HasIndex(new[] { "LogicalName" }, "idx_entity_logicalname");

                    b.ToTable("InternalEntity", (string)null);
                });

            modelBuilder.Entity("LowCode.Models.InternalUIForm", b =>
                {
                    b.Property<Guid?>("FormId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid?>("EntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FormJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FormName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("IsDefault")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("ModifiedBy")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime");

                    b.HasKey("FormId")
                        .HasName("PK_UIForm");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("FormId"), false);

                    b.HasIndex("EntityId");

                    b.HasIndex(new[] { "FormName" }, "idx_uiform_formname");

                    b.ToTable("InternalUIForm", (string)null);
                });

            modelBuilder.Entity("LowCode.Models.InternalUIView", b =>
                {
                    b.Property<Guid?>("ViewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<short?>("Description")
                        .HasColumnType("smallint");

                    b.Property<Guid?>("EntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsDefault")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("LayoutJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("QueryType")
                        .HasColumnType("int");

                    b.Property<string>("SearchFormJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ViewName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("ViewId")
                        .HasName("PK_UIView");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("ViewId"), false);

                    b.HasIndex("EntityId");

                    b.HasIndex(new[] { "ViewName" }, "idx_uiview_viewname");

                    b.ToTable("InternalUiView", (string)null);
                });

            modelBuilder.Entity("LowCode.Models.InternalAttribute", b =>
                {
                    b.HasOne("LowCode.Models.InternalAttributeType", "AttributeType")
                        .WithMany()
                        .HasForeignKey("AttributeTypeId");

                    b.HasOne("LowCode.Models.InternalEntity", "Entity")
                        .WithMany("Attributes")
                        .HasForeignKey("EntityId");

                    b.Navigation("AttributeType");

                    b.Navigation("Entity");
                });

            modelBuilder.Entity("LowCode.Models.InternalUIForm", b =>
                {
                    b.HasOne("LowCode.Models.InternalEntity", "Entity")
                        .WithMany()
                        .HasForeignKey("EntityId");

                    b.Navigation("Entity");
                });

            modelBuilder.Entity("LowCode.Models.InternalUIView", b =>
                {
                    b.HasOne("LowCode.Models.InternalEntity", "Entity")
                        .WithMany()
                        .HasForeignKey("EntityId");

                    b.Navigation("Entity");
                });

            modelBuilder.Entity("LowCode.Models.InternalEntity", b =>
                {
                    b.Navigation("Attributes");
                });
#pragma warning restore 612, 618
        }
    }
}
